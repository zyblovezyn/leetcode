package struct.algorithm01;

import utils.CommonUtils;

import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.regex.Pattern;

public class Test01 {
    public static void main(String[] args) {
        String allStr = "xml_00001,xml_00002,xml_00003,xml_00004,xml_00005,xml_00006,xml_00007,xml_00008,xml_00009,xml_000010,xml_000011,xml_000012,xml_000013,xml_000014,xml_000015,xml_000016,xml_000017,xml_000018,xml_000019,xml_000020,xml_000021,xml_000022,xml_000023,xml_000024,xml_000025,xml_000026,xml_000027,xml_000028,xml_000029,xml_000030,xml_000031,xml_000032,xml_000033,xml_000034,xml_000035,xml_000036,xml_000037,xml_000038,xml_000039,xml_000040,xml_000041,xml_000042,xml_000043,xml_000044,xml_000045,xml_000046,xml_000047,xml_000048,xml_000049,xml_000050,xml_000051,xml_000052,xml_000053,xml_000054,xml_000055,xml_000056,xml_000057,xml_000058,xml_000059,xml_000060,xml_000061,xml_000062,xml_000063,xml_000064,xml_000065,xml_000066,xml_000067,xml_000068,xml_000069,xml_000070,xml_000071,xml_000072,xml_000073,xml_000074,xml_000075,xml_000076,xml_000077,xml_000078,xml_000079,xml_000080,xml_000081,xml_000082,xml_000083,xml_000084,xml_000085,xml_000086,xml_000087,xml_000088,xml_000089,xml_000090,xml_000091,xml_000092,xml_000093,xml_000094,xml_000095,xml_000096,xml_000097,xml_000098,xml_000099,xml_0000100,xml_0000101,xml_0000102,xml_0000103,xml_0000104,xml_0000105,xml_0000106,xml_0000107,xml_0000108,xml_0000109,xml_0000110,xml_0000111,xml_0000112,xml_0000113,xml_0000114,xml_0000115,xml_0000116,xml_0000117,xml_0000118,xml_0000119,xml_0000120,xml_0000121,xml_0000122,xml_0000123,xml_0000124,xml_0000125,xml_0000126,xml_0000127,xml_0000128,xml_0000129,xml_0000130,xml_0000131,xml_0000132,xml_0000133,xml_0000134,xml_0000135,xml_0000136,xml_0000137,xml_0000138,xml_0000139,xml_0000140,xml_0000141,xml_0000142,xml_0000143,xml_0000144,xml_0000145,xml_0000146,xml_0000147,xml_0000148,xml_0000149,xml_0000150,xml_0000151,xml_0000152,xml_0000153,xml_0000154,xml_0000155,xml_0000156,xml_0000157,xml_0000158,xml_0000159,xml_0000160,xml_0000161,xml_0000162,xml_0000163,xml_0000164,xml_0000165,xml_0000166,xml_0000167,xml_0000168,xml_0000169,xml_0000170,xml_0000171,xml_0000172,xml_0000173,xml_0000174,xml_0000175,xml_0000176,xml_0000177,xml_0000178,xml_0000179,xml_0000180,xml_0000181,xml_0000182,xml_0000183,xml_0000184,xml_0000185,xml_0000186,xml_0000187,xml_0000188,xml_0000189,xml_0000190,xml_0000191,xml_0000192,xml_0000193,xml_0000194,xml_0000195,xml_0000196,xml_0000197,xml_0000198,xml_0000199,xml_0000200,xml_0000201,xml_0000202,xml_0000203,xml_0000204,xml_0000205,xml_0000206,xml_0000207,xml_0000208,xml_0000209,xml_0000210,xml_0000211,xml_0000212,xml_0000213,xml_0000214,xml_0000215,xml_0000216,xml_0000217,xml_0000218,xml_0000219,xml_0000220,xml_0000221,xml_0000222,xml_0000223,xml_0000224,xml_0000225,xml_0000226,xml_0000227,xml_0000228,xml_0000229,xml_0000230,xml_0000231,xml_0000232,xml_0000233,xml_0000234,xml_0000235,xml_0000236,xml_0000237,xml_0000238,xml_0000239,xml_0000240,xml_0000241,xml_0000242,xml_0000243,xml_0000244,xml_0000245,xml_0000246,xml_0000247,xml_0000248,xml_0000249,xml_0000250,xml_0000251,xml_0000252,xml_0000253,xml_0000254,xml_0000255,xml_0000256,xml_0000257,xml_0000258,xml_0000259,xml_0000260,xml_0000261,xml_0000262,xml_0000263,xml_0000264,xml_0000265,xml_0000266,xml_0000267,xml_0000268,xml_0000269,xml_0000270,xml_0000271,xml_0000272,xml_0000273,xml_0000274,xml_0000275,xml_0000276,xml_0000277,xml_0000278,xml_0000279,xml_0000280,xml_0000281,xml_0000282,xml_0000283,xml_0000284,xml_0000285,xml_0000286,xml_0000287,xml_0000288,xml_0000289,xml_0000290,xml_0000291,xml_0000292,xml_0000293,xml_0000294,xml_0000295,xml_0000296,xml_0000297,xml_0000298,xml_0000299,xml_0000300,xml_0000301,xml_0000302,xml_0000303,xml_0000304,xml_0000305,xml_0000306,xml_0000307,xml_0000308,xml_0000309,xml_0000310,xml_0000311,xml_0000312,xml_0000313,xml_0000314,xml_0000315,xml_0000316,xml_0000317,xml_0000318,xml_0000319,xml_0000320,xml_0000321,xml_0000322,xml_0000323,xml_0000324,xml_0000325,xml_0000326,xml_0000327,xml_0000328,xml_0000329,xml_0000330,xml_0000331,xml_0000332,xml_0000333,xml_0000334,xml_0000335,xml_0000336,xml_0000337,xml_0000338,xml_0000339,xml_0000340,xml_0000341,xml_0000342,xml_0000343,xml_0000344,xml_0000345,xml_0000346,xml_0000347,xml_0000348,xml_0000349,xml_0000350,xml_0000351,xml_0000352,xml_0000353,xml_0000354,xml_0000355,xml_0000356,xml_0000357,xml_0000358,xml_0000359,xml_0000360,xml_0000361,xml_0000362,xml_0000363,xml_0000364,xml_0000365,xml_0000366,xml_0000367,xml_0000368,xml_0000369,xml_0000370,xml_0000371,xml_0000372,xml_0000373,xml_0000374,xml_0000375,xml_0000376,xml_0000377,xml_0000378,xml_0000379,xml_0000380,xml_0000381,xml_0000382,xml_0000383,xml_0000384,xml_0000385,xml_0000386,xml_0000387,xml_0000388,xml_0000389,xml_0000390,xml_0000391,xml_0000392,xml_0000393,xml_0000394,xml_0000395,xml_0000396,xml_0000397,xml_0000398,xml_0000399,xml_0000400,xml_0000401,xml_0000402,xml_0000403,xml_0000404,xml_0000405,xml_0000406,xml_0000407,xml_0000408,xml_0000409,xml_0000410,xml_0000411,xml_0000412,xml_0000413,xml_0000414,xml_0000415,xml_0000416,xml_0000417,xml_0000418,xml_0000419,xml_0000420,xml_0000421,xml_0000422,xml_0000423,xml_0000424,xml_0000425,xml_0000426,xml_0000427,xml_0000428,xml_0000429,xml_0000430,xml_0000431,xml_0000432,xml_0000433,xml_0000434,xml_0000435,xml_0000436,xml_0000437,xml_0000438,xml_0000439,xml_0000440,xml_0000441,xml_0000442,xml_0000443,xml_0000444,xml_0000445,xml_0000446,xml_0000447,xml_0000448,xml_0000449,xml_0000450,xml_0000451,xml_0000452,xml_0000453,xml_0000454,xml_0000455,xml_0000456,xml_0000457,xml_0000458,xml_0000459,xml_0000460,xml_0000461,xml_0000462,xml_0000463,xml_0000464,xml_0000465,xml_0000466,xml_0000467,xml_0000468,xml_0000469,xml_0000470,xml_0000471,xml_0000472,xml_0000473,xml_0000474,xml_0000475,xml_0000476,xml_0000477,xml_0000478,xml_0000479,xml_0000480,xml_0000481,xml_0000482,xml_0000483,xml_0000484,xml_0000485,xml_0000486,xml_0000487,xml_0000488,xml_0000489,xml_0000490,xml_0000491,xml_0000492,xml_0000493,xml_0000494,xml_0000495,xml_0000496,xml_0000497,xml_0000498,xml_0000499,xml_0000500,xml_0000501,xml_0000502,xml_0000503,xml_0000504,xml_0000505,xml_0000506,xml_0000507,xml_0000508,xml_0000509,xml_0000510,xml_0000511,xml_0000512,xml_0000513,xml_0000514,xml_0000515,xml_0000516,xml_0000517,xml_0000518,xml_0000519,xml_0000520,xml_0000521,xml_0000522,xml_0000523,xml_0000524,xml_0000525,xml_0000526,xml_0000527,xml_0000528,xml_0000529,xml_0000530,xml_0000531,xml_0000532,xml_0000533,xml_0000534,xml_0000535,xml_0000536,xml_0000537,xml_0000538,xml_0000539,xml_0000540,xml_0000541,xml_0000542,xml_0000543,xml_0000544,xml_0000545,xml_0000546,xml_0000547,xml_0000548,xml_0000549,xml_0000550,xml_0000551,xml_0000552,xml_0000553,xml_0000554,xml_0000555,xml_0000556,xml_0000557,xml_0000558,xml_0000559,xml_0000560,xml_0000561,xml_0000562,xml_0000563,xml_0000564,xml_0000565,xml_0000566,xml_0000567,xml_0000568,xml_0000569,xml_0000570,xml_0000571,xml_0000572,xml_0000573,xml_0000574,xml_0000575,xml_0000576,xml_0000577,xml_0000578,xml_0000579,xml_0000580,xml_0000581,xml_0000582,xml_0000583,xml_0000584,xml_0000585,xml_0000586,xml_0000587,xml_0000588,xml_0000589,xml_0000590,xml_0000591,xml_0000592,xml_0000593,xml_0000594,xml_0000595,xml_0000596,xml_0000597,xml_0000598,xml_0000599,xml_0000600,xml_0000601,xml_0000602,xml_0000603,xml_0000604,xml_0000605,xml_0000606,xml_0000607,xml_0000608,xml_0000609,xml_0000610,xml_0000611,xml_0000612,xml_0000613,xml_0000614,xml_0000615,xml_0000616,xml_0000617,xml_0000618,xml_0000619,xml_0000620,xml_0000621,xml_0000622,xml_0000623,xml_0000624,xml_0000625,xml_0000626,xml_0000627,xml_0000628,xml_0000629,xml_0000630,xml_0000631,xml_0000632,xml_0000633,xml_0000634,xml_0000635,xml_0000636,xml_0000637,xml_0000638,xml_0000639,xml_0000640,xml_0000641,xml_0000642,xml_0000643,xml_0000644,xml_0000645,xml_0000646,xml_0000647,xml_0000648,xml_0000649,xml_0000650,xml_0000651,xml_0000652,xml_0000653,xml_0000654,xml_0000655,xml_0000656,xml_0000657,xml_0000658,xml_0000659,xml_0000660,xml_0000661,xml_0000662,xml_0000663,xml_0000664,xml_0000665,xml_0000666,xml_0000667,xml_0000668,xml_0000669,xml_0000670,xml_0000671,xml_0000672,xml_0000673,xml_0000674,xml_0000675,xml_0000676,xml_0000677,xml_0000678,xml_0000679,xml_0000680,xml_0000681,xml_0000682,xml_0000683,xml_0000684,xml_0000685,xml_0000686,xml_0000687,xml_0000688,xml_0000689,xml_0000690,xml_0000691,xml_0000692,xml_0000693,xml_0000694,xml_0000695,xml_0000696,xml_0000697,xml_0000698,xml_0000699,xml_0000700,xml_0000701,xml_0000702,xml_0000703,xml_0000704,xml_0000705,xml_0000706,xml_0000707,xml_0000708,xml_0000709,xml_0000710,xml_0000711,xml_0000712,xml_0000713,xml_0000714,xml_0000715,xml_0000716,xml_0000717,xml_0000718,xml_0000719,xml_0000720,xml_0000721,xml_0000722,xml_0000723,xml_0000724,xml_0000725,xml_0000726,xml_0000727,xml_0000728,xml_0000729,xml_0000730,xml_0000731,xml_0000732,xml_0000733,xml_0000734,xml_0000735,xml_0000736,xml_0000737,xml_0000738,xml_0000739,xml_0000740,xml_0000741,xml_0000742,xml_0000743,xml_0000744,xml_0000745,xml_0000746,xml_0000747,xml_0000748,xml_0000749,xml_0000750,xml_0000751,xml_0000752,xml_0000753,xml_0000754,xml_0000755,xml_0000756,xml_0000757,xml_0000758,xml_0000759,xml_0000760,xml_0000761,xml_0000762,xml_0000763,xml_0000764,xml_0000765,xml_0000766,xml_0000767,xml_0000768,xml_0000769,xml_0000770,xml_0000771,xml_0000772,xml_0000773,xml_0000774,xml_0000775,xml_0000776,xml_0000777,xml_0000778,xml_0000779,xml_0000780,xml_0000781,xml_0000782,xml_0000783,xml_0000784,xml_0000785,xml_0000786,xml_0000787,xml_0000788,xml_0000789,xml_0000790,xml_0000791,xml_0000792,xml_0000793,xml_0000794,xml_0000795,xml_0000796,xml_0000797,xml_0000798,xml_0000799,xml_0000800,xml_0000801,xml_0000802,xml_0000803,xml_0000804,xml_0000805,xml_0000806,xml_0000807,xml_0000808,xml_0000809,xml_0000810,xml_0000811,xml_0000812,xml_0000813,xml_0000814,xml_0000815,xml_0000816,xml_0000817,xml_0000818,xml_0000819,xml_0000820,xml_0000821,xml_0000822,xml_0000823,xml_0000824,xml_0000825,xml_0000826,xml_0000827,xml_0000828,xml_0000829,xml_0000830,xml_0000831,xml_0000832,xml_0000833,xml_0000834,xml_0000835,xml_0000836,xml_0000837,xml_0000838,xml_0000839,xml_0000840,xml_0000841,xml_0000842,xml_0000843,xml_0000844,xml_0000845,xml_0000846,xml_0000847,xml_0000848,xml_0000849,xml_0000850,xml_0000851,xml_0000852,xml_0000853,xml_0000854,xml_0000855,xml_0000856,xml_0000857,xml_0000858,xml_0000859,xml_0000860,xml_0000861,xml_0000862,xml_0000863,xml_0000864,xml_0000865,xml_0000866,xml_0000867,xml_0000868,xml_0000869,xml_0000870,xml_0000871,xml_0000872,xml_0000873,xml_0000874,xml_0000875,xml_0000876,xml_0000877,xml_0000878,xml_0000879,xml_0000880,xml_0000881,xml_0000882,xml_0000883,xml_0000884,xml_0000885,xml_0000886,xml_0000887,xml_0000888,xml_0000889,xml_0000890,xml_0000891,xml_0000892,xml_0000893,xml_0000894,xml_0000895,xml_0000896,xml_0000897,xml_0000898,xml_0000899,xml_0000900,xml_0000901,xml_0000902,xml_0000903,xml_0000904,xml_0000905,xml_0000906,xml_0000907,xml_0000908,xml_0000909,xml_0000910,xml_0000911,xml_0000912,xml_0000913,xml_0000914,xml_0000915,xml_0000916,xml_0000917,xml_0000918,xml_0000919,xml_0000920,xml_0000921,xml_0000922,xml_0000923,xml_0000924,xml_0000925,xml_0000926,xml_0000927,xml_0000928,xml_0000929,xml_0000930,xml_0000931,xml_0000932,xml_0000933,xml_0000934,xml_0000935,xml_0000936,xml_0000937,xml_0000938,xml_0000939,xml_0000940,xml_0000941,xml_0000942,xml_0000943,xml_0000944,xml_0000945,xml_0000946,xml_0000947,xml_0000948,xml_0000949,xml_0000950,xml_0000951,xml_0000952,xml_0000953,xml_0000954,xml_0000955,xml_0000956,xml_0000957,xml_0000958,xml_0000959,xml_0000960,xml_0000961,xml_0000962,xml_0000963,xml_0000964,xml_0000965,xml_0000966,xml_0000967,xml_0000968,xml_0000969,xml_0000970,xml_0000971,xml_0000972,xml_0000973,xml_0000974,xml_0000975,xml_0000976,xml_0000977,xml_0000978,xml_0000979,xml_0000980,xml_0000981,xml_0000982,xml_0000983,xml_0000984,xml_0000985,xml_0000986,xml_0000987,xml_0000988,xml_0000989,xml_0000990,xml_0000991,xml_0000992,xml_0000993,xml_0000994,xml_0000995,xml_0000996,xml_0000997,xml_0000998,xml_0000999,xml_00001000,xml_00001001,xml_00001002,xml_00001003,xml_00001004,xml_00001005,xml_00001006,xml_00001007,xml_00001008,xml_00001009,xml_00001010,xml_00001011,xml_00001012,xml_00001013,xml_00001014,xml_00001015,xml_00001016,xml_00001017,xml_00001018,xml_00001019,xml_00001020,xml_00001021,xml_00001022,xml_00001023,xml_00001024,xml_00001025,xml_00001026,xml_00001027,xml_00001028,xml_00001029,xml_00001030,xml_00001031,xml_00001032,xml_00001033";
        List<String> searchStrs = Arrays.asList(allStr.split(","));
        Collections.shuffle(searchStrs);

        CommonUtils.startTime();
        algorithm01(searchStrs, allStr);
        CommonUtils.endTime();

        CommonUtils.startTime();
        algorithm02(searchStrs, Arrays.asList(allStr.split(",")));
        CommonUtils.endTime();

        CommonUtils.startTime();
        algorithm03(searchStrs,allStr);
        CommonUtils.endTime();

        CommonUtils.startTime();
        List<String> list = Arrays.asList(allStr.split(","));
        Collections.sort(list);
        algorithm04(searchStrs,list);
        CommonUtils.endTime();

    }

    public static void algorithm01(List<String> searchStrs, String target) {
        for (int i = 0; i < searchStrs.size(); i++) {
            searchStr(target, searchStrs.get(i));
        }
    }

    public static void algorithm02(List<String> searchStrs, List<String> targets) {
        for (int i = 0; i < searchStrs.size(); i++) {
            for (int j = 0; j < targets.size(); j++) {
                if (searchStrs.get(i) == targets.get(i)) {
                    return;
                }
            }
        }
    }

    private static void algorithm03(List<String> searchStrs, String target) {
        for (int i = 0; i < searchStrs.size(); i++) {
            Pattern.matches(searchStrs.get(i), target);
        }
    }

    private static void algorithm04(List<String> searchStrs, List<String> targets) {
        for (int i = 0; i < searchStrs.size(); i++) {
            Collections.binarySearch(targets, searchStrs.get(i));
        }
    }

    public static boolean searchStr(String target, String searchStr) {
        if (target.indexOf(searchStr) > 0) {
            return true;
        } else {
            return false;
        }
    }
}
